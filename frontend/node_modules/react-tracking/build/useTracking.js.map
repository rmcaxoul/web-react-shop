{"version":3,"sources":["../src/useTracking.js"],"names":["useTracking","trackingContext","ReactTrackingContext","tracking","Error","getTrackingData","trackEvent","dispatch"],"mappings":"qGAAA,4BACA,gFAEe,QAASA,CAAAA,WAAT,EAAuB,CACpC,GAAMC,CAAAA,eAAe,CAAG,sBAAWC,oDAAX,CAAxB,CAEA,GAAI,EAAED,eAAe,EAAIA,eAAe,CAACE,QAArC,CAAJ,CAAoD,CAClD,KAAM,IAAIC,CAAAA,KAAJ,CACJ,oCACE,4EADF,CAEE,mCAHE,CAKP,CAED,MAAO,mBACL,iBAAO,CACLC,eAAe,CAAEJ,eAAe,CAACE,QAAhB,CAAyBE,eADrC,CAELC,UAAU,CAAEL,eAAe,CAACE,QAAhB,CAAyBI,QAFhC,CAAP,CADK,CAKL,CACEN,eAAe,CAACE,QAAhB,CAAyBE,eAD3B,CAEEJ,eAAe,CAACE,QAAhB,CAAyBI,QAF3B,CALK,CAUR","sourcesContent":["import { useContext, useMemo } from 'react';\nimport { ReactTrackingContext } from './withTrackingComponentDecorator';\n\nexport default function useTracking() {\n  const trackingContext = useContext(ReactTrackingContext);\n\n  if (!(trackingContext && trackingContext.tracking)) {\n    throw new Error(\n      'Attempting to call `useTracking` ' +\n        'without a ReactTrackingContext present. Did you forget to wrap the top of ' +\n        'your component tree with `track`?'\n    );\n  }\n\n  return useMemo(\n    () => ({\n      getTrackingData: trackingContext.tracking.getTrackingData,\n      trackEvent: trackingContext.tracking.dispatch,\n    }),\n    [\n      trackingContext.tracking.getTrackingData,\n      trackingContext.tracking.dispatch,\n    ]\n  );\n}\n"],"file":"useTracking.js"}