{"version":3,"sources":["../src/makeClassMemberDecorator.js"],"names":["makeClassMemberDecorator","decorate","decorateClassMember","target","name","descriptor","configurable","enumerable","value","get","initializer","resolvedValue","Reflect","apply","decoratedValue","bind","defineProperty","Error"],"mappings":"kHAWe,QAASA,CAAAA,wBAAT,CAAkCC,QAAlC,CAA4C,CACzD,MAAO,SAASC,CAAAA,mBAAT,CAA6BC,MAA7B,CAAqCC,IAArC,CAA2CC,UAA3C,CAAuD,IACpDC,CAAAA,YADoD,CACED,UADF,CACpDC,YADoD,CACtCC,UADsC,CACEF,UADF,CACtCE,UADsC,CAC1BC,KAD0B,CACEH,UADF,CAC1BG,KAD0B,CACnBC,IADmB,CACEJ,UADF,CACnBI,GADmB,CACdC,WADc,CACEL,UADF,CACdK,WADc,CAG5D,GAAIF,KAAJ,CAAW,CACT,MAAO,CACLF,YAAY,CAAZA,YADK,CAELC,UAAU,CAAVA,UAFK,CAGLC,KAAK,CAAEP,QAAQ,CAACO,KAAD,CAHV,CAKR,CAGD,GAAIC,IAAG,EAAIC,WAAX,CAAwB,CACtB,MAAO,CACLJ,YAAY,CAAZA,YADK,CAELC,UAAU,CAAVA,UAFK,CAGLE,GAHK,eAGC,CAGJ,GAAI,OAASN,MAAb,CAAqB,CACnB,MAAO,KACR,CAED,GAAMQ,CAAAA,aAAa,CAAGD,WAAW,CAC7BE,OAAO,CAACC,KAAR,CAAcH,WAAd,CAA2B,IAA3B,CAAiC,EAAjC,CAD6B,CAE7BE,OAAO,CAACC,KAAR,CAAcJ,IAAd,CAAmB,IAAnB,CAAyB,EAAzB,CAFJ,CAGA,GAAMK,CAAAA,cAAc,CAAGb,QAAQ,CAACU,aAAD,CAAR,CAAwBI,IAAxB,CAA6B,IAA7B,CAAvB,CAEAH,OAAO,CAACI,cAAR,CAAuB,IAAvB,CAA6BZ,IAA7B,CAAmC,CACjCE,YAAY,CAAZA,YADiC,CAEjCC,UAAU,CAAVA,UAFiC,CAGjCC,KAAK,CAAEM,cAH0B,CAAnC,EAMA,MAAOA,CAAAA,cACR,CAtBI,CAwBR,CAED,KAAM,IAAIG,CAAAA,KAAJ,CACJ,2DADI,CAGP,CACF","sourcesContent":["/**\n * Helper to decorate class member\n * Supports class plain methods, field syntax and lazy methods\n * @param {Function} decorate Actual decorator function.\n * Example:\n *   decoratedFn => function () {\n *     // do stuff...\n *     return Reflect.apply(decoratedFn, this, arguments);\n *   }\n * @returns {Function} Class member decorator ((target, name, descriptor) => newDescriptor)\n */\nexport default function makeClassMemberDecorator(decorate) {\n  return function decorateClassMember(target, name, descriptor) {\n    const { configurable, enumerable, value, get, initializer } = descriptor;\n\n    if (value) {\n      return {\n        configurable,\n        enumerable,\n        value: decorate(value),\n      };\n    }\n\n    // support lazy initializer\n    if (get || initializer) {\n      return {\n        configurable,\n        enumerable,\n        get() {\n          // This happens if someone accesses the\n          // property directly on the prototype\n          if (this === target) {\n            return null;\n          }\n\n          const resolvedValue = initializer\n            ? Reflect.apply(initializer, this, [])\n            : Reflect.apply(get, this, []);\n          const decoratedValue = decorate(resolvedValue).bind(this);\n\n          Reflect.defineProperty(this, name, {\n            configurable,\n            enumerable,\n            value: decoratedValue,\n          });\n\n          return decoratedValue;\n        },\n      };\n    }\n\n    throw new Error(\n      'called makeClassMemberDecorator on unsupported descriptor'\n    );\n  };\n}\n"],"file":"makeClassMemberDecorator.js"}